[{"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/index.js":"1","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/App.js":"2","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/reportWebVitals.js":"3","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/context/AuthProvider.js":"4","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Users.js":"5","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Showings.js":"6","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Unauthorized.js":"7","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/SuccessfulReservation.js":"8","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Register.js":"9","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Movies.js":"10","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Missing.js":"11","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Layout.js":"12","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/RequireAuth.js":"13","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/PersonalInfo.js":"14","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Reservations.js":"15","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Login.js":"16","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Home.js":"17","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/MoviePage.js":"18","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/components/Navbar.js":"19","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/api/axios.js":"20","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/hooks/useAuth.js":"21","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/hooks/useAxiosPrivate.js":"22","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/hooks/useRefreshToken.js":"23"},{"size":811,"mtime":1682422873985,"results":"24","hashOfConfig":"25"},{"size":1908,"mtime":1682422873985,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1682422873987,"results":"27","hashOfConfig":"25"},{"size":342,"mtime":1682422873985,"results":"28","hashOfConfig":"25"},{"size":3905,"mtime":1682422873987,"results":"29","hashOfConfig":"25"},{"size":4469,"mtime":1682422873987,"results":"30","hashOfConfig":"25"},{"size":586,"mtime":1682422873987,"results":"31","hashOfConfig":"25"},{"size":402,"mtime":1682422873987,"results":"32","hashOfConfig":"25"},{"size":11993,"mtime":1682422873986,"results":"33","hashOfConfig":"25"},{"size":4456,"mtime":1682422873986,"results":"34","hashOfConfig":"25"},{"size":349,"mtime":1682422873986,"results":"35","hashOfConfig":"25"},{"size":180,"mtime":1682422873986,"results":"36","hashOfConfig":"25"},{"size":577,"mtime":1682422873986,"results":"37","hashOfConfig":"25"},{"size":3162,"mtime":1682422873986,"results":"38","hashOfConfig":"25"},{"size":4420,"mtime":1682422873987,"results":"39","hashOfConfig":"25"},{"size":3524,"mtime":1685956427155,"results":"40","hashOfConfig":"25"},{"size":2051,"mtime":1682422873986,"results":"41","hashOfConfig":"25"},{"size":5421,"mtime":1682422873986,"results":"42","hashOfConfig":"25"},{"size":2463,"mtime":1682422873985,"results":"43","hashOfConfig":"25"},{"size":206,"mtime":1685954532937,"results":"44","hashOfConfig":"25"},{"size":174,"mtime":1682422873985,"results":"45","hashOfConfig":"25"},{"size":1509,"mtime":1682422873985,"results":"46","hashOfConfig":"25"},{"size":692,"mtime":1682422873985,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"hknzjg",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"51"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"51"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/index.js",[],[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/App.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/reportWebVitals.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/context/AuthProvider.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Users.js",["127","128"],[],"import { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport axios from 'axios';\nimport useAuth from \"../hooks/useAuth\";\n\n\n\nconst Users = () => {\n\n    const { auth } = useAuth();\n    const [users, setUsers] = useState();\n    const axiosPrivate = useAxiosPrivate();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [isAuthorized,setIsAuthorized] = useState(false);\n\n    useEffect(() => {\n        setIsAuthorized(auth?.roles?.find(role => role === \"EMPLOYER\" || role === \"ADMIN\"));\n    }, [])\n\n    const onDelete = async (username) => {\n        await axios({\n            url: `http://localhost:8080/api/users/delete/${username}`,\n            method: \"DELETE\",\n            headers: {\n                'Authorization': `Bearer ${auth?.access_token}`\n            },\n            data: {}\n        })\n        loadUsers();\n    };\n\n    const loadUsers = async () => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getUsers = async () => {\n            try {\n                const response = await axiosPrivate.get('users', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setUsers(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        getUsers();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n    };\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n    return (\n        <article>\n            <Navbar/>\n            <br/>\n            <section>\n            <div className=\"container\">\n                <h2>List of Users</h2>\n                {users?.length\n                    ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Username</th>\n                                    <th>Fisrt_Name</th>\n                                    <th>Last_Name</th>\n                                    <th>Role</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.map((user, index) => (\n                                    <tr key={index}>\n                                        <td>{user?.email}</td>\n                                        <td>{user?.firstname}</td>\n                                        <td>{user?.lastname}</td>\n                                        <td>{user?.role}</td>\n                                        <td>\n                                            <button\n                                            disabled={!isAuthorized ? true : false}\n                                            >Edit</button>\n                                            <button\n                                                disabled={!isAuthorized ? true : false}\n                                                onClick={() => onDelete(user?.email)}\n                                            >Delete</button></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>                        \n                    ) : <p>No users to display</p>\n                }\n                <button\n                disabled={!isAuthorized ? true : false}\n                >Add User</button>\n            </div>\n            </section>\n        </article>\n    );\n};\nexport default Users;\n","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Showings.js",["129","130"],[],"import { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport useAuth from \"../hooks/useAuth\";\n\n\n\n\nconst Showings = () => {\n\n    const { auth } = useAuth();\n    const [showings, setShowings] = useState();\n    const axiosPrivate = useAxiosPrivate();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [isAuthorized,setIsAuthorized] = useState(false);\n\n    useEffect(() => {\n        setIsAuthorized(auth?.roles?.find(role => role === \"EMPLOYER\" || role === \"ADMIN\"));\n    }, [])\n\n    const onDelete = async (id) => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const deleteShowing = async () => {\n            try {\n                const response_tmp = await axiosPrivate.delete(`showings/${id}`, {\n                    signal: controller.signal\n                });\n                const response = await axiosPrivate.get('showings', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                console.log(response_tmp.data);\n                isMounted && setShowings(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        deleteShowing();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n\n    };\n\n    const loadShowings = async () => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getShowings = async () => {\n            try {\n                const response = await axiosPrivate.get('showings', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setShowings(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        getShowings();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n    };\n\n    useEffect(() => {\n        loadShowings();\n    }, []);\n\n    return (\n        <article>\n            <Navbar/>\n            <br/>\n            <section>\n                <h2>List of Showings</h2>\n                {showings?.length\n                    ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Id</th>\n                                    <th>Movie</th>\n                                    <th>State</th>\n                                    <th>Date and Time</th>\n                                    <th>Room</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {showings.map((showing, index) => (\n                                    <tr key={index}>\n                                        <td>{showing?.id}</td>\n                                        <td>{showing?.showingMovie.title}</td>\n                                        <td>{showing?.state}</td>\n                                        <td>{showing?.showingDate}</td>\n                                        <td>Room {showing?.showingRoom}</td>\n                                        <td>\n                                            <button\n                                            disabled={!isAuthorized ? true : false}\n                                                onClick={() => onDelete(showing?.id)}\n                                            >Delete</button></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : <p><br />There are no registered showings</p>\n                }\n                <button\n                disabled={!isAuthorized ? true : false}\n                >Add Showing</button>\n            </section>\n        </article>\n    );\n};\nexport default Showings;\n","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Unauthorized.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/SuccessfulReservation.js",["131"],[],"import { useNavigate } from \"react-router-dom\"\nimport Navbar from \"../components/Navbar\";\n\nconst SuccessfulReservation = () => {\n\n    const navigate = useNavigate();\n\n    return (\n        <div>\n        <Navbar></Navbar>\n        <br/>\n        <section>\n            <h1>Reservation Successfully Made!</h1>\n            <br />\n        </section>\n        </div>\n    )\n}\n\nexport default SuccessfulReservation","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Register.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Movies.js",["132","133"],[],"import { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport useAuth from \"../hooks/useAuth\";\n\n\n\n\nconst Movies = () => {\n\n    const { auth } = useAuth();\n    const [movies, setMovies] = useState();\n    const axiosPrivate = useAxiosPrivate();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [isAuthorized,setIsAuthorized] = useState(false);\n\n    useEffect(() => {\n        setIsAuthorized(auth?.roles?.find(role => role === \"EMPLOYER\" || role === \"ADMIN\"));\n    }, [])\n\n    const onDelete = async (title) => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const deleteMovie = async () => {\n            try {\n                const response_tmp = await axiosPrivate.delete(`movies/${title}`, {\n                    signal: controller.signal\n                });\n                const response = await axiosPrivate.get('movies', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                console.log(response_tmp.data);\n                isMounted && setMovies(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        deleteMovie();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n\n    };\n\n    const loadMovies = async () => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getMovies = async () => {\n            try {\n                const response = await axiosPrivate.get('movies', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setMovies(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        getMovies();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n    };\n\n    useEffect(() => {\n        loadMovies();\n    }, []);\n\n    return (\n        <article>\n            <Navbar/>\n            <br/>\n            <section>\n                <h2>List of Movies</h2>\n                {movies?.length\n                    ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Poster</th>\n                                    <th>Title</th>\n                                    <th>Director</th>\n                                    <th>Genre</th>\n                                    <th>Duration</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {movies.map((movie, index) => (\n                                    <tr key={index}>\n                                        <td><img src={movie?.poster} className=\"Poster\" alt=\"\"/></td>\n                                        <td>{movie?.title}</td>\n                                        <td>{movie?.director}</td>\n                                        <td>{movie?.genre}</td>\n                                        <td>{movie?.duration} minutes</td>\n                                        <td>\n                                            <button\n                                                disabled={!isAuthorized ? true : false}\n                                                onClick={() => onDelete(movie?.title)}\n                                            >Delete</button></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : <p><br />There are no registered movies</p>\n                }\n                <button\n                disabled={!isAuthorized ? true : false}\n                >Add Movie</button>\n            </section>\n        </article>\n    );\n};\nexport default Movies;\n","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Missing.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Layout.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/RequireAuth.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/PersonalInfo.js",["134"],[],"import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\"\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Navbar from \"../components/Navbar\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst PersonalInfo = () => {\n\n    const { auth } = useAuth();\n    const navigate = useNavigate();\n    const [reservations, setReservations] = useState();\n    const axiosPrivate = useAxiosPrivate();\n    const location = useLocation();\n\n    const loadReservations = async () =>{\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getReservations = async () => {\n            try {\n                const response = await axiosPrivate.get(`users/${auth?.username}/reservations`, {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setReservations(response.data);\n            } catch (err) {\n                if (err?.code !== `ERR_CANCELED`) {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n        \n        getReservations();\n\n    }\n\n    useEffect(\n        ()=>{\n            loadReservations()\n        },[]);\n\n    return (\n        <div>\n        <Navbar></Navbar>\n        <br/>\n        <section>\n            <h1>Personal Information:</h1>\n            <p><b>First name:</b> {auth?.firstname}</p>\n            <p><b>Last name:</b> {auth?.lastname}</p>\n            <p><b>Email:</b> {auth?.username}</p>\n            <br/>\n            <h1>My Reservations:</h1>\n            <div className=\"item-solo\">\n                    <div className=\"item-solo-text\">\n                        {reservations?.length? (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Date and Time</th>\n                                        <th>ID</th>\n                                        <th>Movie</th>\n                                        <th>Room</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {reservations.map((reservation, index) => (\n                                        <tr key={index}>\n                                            <td>{reservation?.reservedShowing?.showingDate}</td>\n                                            <td>{reservation?.id}</td>\n                                            <td>{reservation?.reservedShowing?.showingMovie?.title}</td>\n                                            <td>{reservation?.reservedShowing?.showingRoom}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        ) : <p><br />There are no registered reservations in your name</p>\n                        }\n                    </div>\n                </div>\n        </section>\n        </div>\n    )\n}\n\nexport default PersonalInfo","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Reservations.js",["135","136"],[],"import { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport useAuth from \"../hooks/useAuth\";\n\n\n\n\nconst Reservations = () => {\n\n    const { auth } = useAuth();\n    const [reservations, setReservations] = useState();\n    const axiosPrivate = useAxiosPrivate();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [isAuthorized,setIsAuthorized] = useState(false);\n\n    useEffect(() => {\n        setIsAuthorized(auth?.roles?.find(role => role === \"EMPLOYER\" || role === \"ADMIN\"));\n    }, [])\n\n    const onDelete = async (id) => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const deleteReservation = async () => {\n            try {\n                const response_tmp = await axiosPrivate.delete(`reservations/${id}`, {\n                    signal: controller.signal\n                });\n                const response = await axiosPrivate.get('reservations', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                console.log(response_tmp.data);\n                isMounted && setReservations(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        deleteReservation();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n\n    };\n\n    const loadReservations = async () => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getReservations = async () => {\n            try {\n                const response = await axiosPrivate.get('reservations', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setReservations(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        getReservations();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n    };\n\n    useEffect(() => {\n        loadReservations();\n    }, []);\n\n    return (\n        <article>\n            <Navbar/>\n            <br/>\n            <section>\n                <h2>List of Reservations</h2>\n                {reservations?.length\n                    ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Id</th>\n                                    <th>Movie</th>\n                                    <th>User</th>\n                                    <th>Date</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {reservations.map((reservation, index) => (\n                                    <tr key={index}>\n                                        <td>{reservation?.id}</td>\n                                        <td>{reservation?.reservedShowing?.showingMovie?.title}</td>\n                                        <td>{reservation?.reservedUser?.email}</td>\n                                        <td>{reservation?.reservedShowing?.showingDate}</td>\n                                        <td>\n                                            <button\n                                                disabled={!isAuthorized ? true : false}\n                                                onClick={() => onDelete(reservation?.id)}\n                                            >Delete</button></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : <p><br />There are no registered reservations</p>\n                }\n                <button>Make new Reservation</button>\n            </section>\n        </article>\n    );\n};\nexport default Reservations;","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Login.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/Home.js",["137"],[],"import { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\n\nconst Home = () => {\n\n    const [movies, setMovies] = useState();\n    const axiosPrivate = useAxiosPrivate();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const loadMovies = async () => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getMovies = async () => {\n            try {\n                const response = await axiosPrivate.get('movies', {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setMovies(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        getMovies();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n    };\n\n    useEffect(\n        ()=>{\n            loadMovies()\n        },[]);\n\n    return (\n        <div>\n            <Navbar/>\n            <br/>\n                <section>\n                <h1>Playing now:</h1>\n                {movies?.length?\n                (\n                    <div className=\"item-list\">\n                        {movies.map((movie) => (\n                                <div className=\"item\" key={movie.title} onClick={()=>{navigate(`/movies/${movie.title}`)}}>\n                                    <img src={movie?.poster} className=\"Poster\" alt=\"\"/>\n                                    <p>{movie?.title}</p>\n                                    </div>\n                                ))}\n                    </div>\n                ) : <p><br />There are no registered movies</p>\n                }\n                </section>\n        </div>\n    )\n}\n\nexport default Home","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/pages/MoviePage.js",["138"],[],"import { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst MoviePage = () => {\n\n    const { auth } = useAuth();\n    const [movie, setMovie] = useState();\n    const [showings, setShowings] = useState();\n    const {id}=useParams();\n    const axiosPrivate = useAxiosPrivate();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const loadShowings = async () =>{\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getShowings = async () => {\n            try {\n                const response = await axiosPrivate.get(`movies/${id}/showings`, {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setShowings(response.data);\n            } catch (err) {\n                if (err?.code !== `ERR_CANCELED`) {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n        \n        getShowings();\n\n    }\n\n    const onMakeReservation = async (id) => {\n        let isMounted = true;\n        const controller = new AbortController();\n        let username = auth.username;\n\n        const makeReservation = async () => {\n            try {\n                const response_tmp = await axiosPrivate.post(`reservations/save/${username}-${id}`, {\n                    signal: controller.signal\n                });\n                console.log(response_tmp.data);\n                isMounted && navigate('/successful_reservation');\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        makeReservation();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n\n    };\n\n    const loadMovie = async () => {\n        let isMounted = true;\n        const controller = new AbortController();\n\n        const getMovie = async () => {\n            try {\n                const response = await axiosPrivate.get(`movies/${id}`, {\n                    signal: controller.signal\n                });\n                console.log(response.data);\n                isMounted && setMovie(response.data);\n            } catch (err) {\n                if (err?.code !== 'ERR_CANCELED') {\n                    console.error(err);\n                    navigate('/login', { state: { from: location }, replace: true });\n                }\n            }\n        }\n\n        getMovie();\n\n        return () => {\n            isMounted = false;\n            controller.abort();\n        }\n    };\n\n    useEffect(\n        ()=>{\n            loadMovie()\n            loadShowings()\n        },[]);\n\n    return (\n        <div>\n            <Navbar/>\n            <br/>\n\n            <section>\n                <h1>{movie?.title}</h1>    \n                <div className=\"movie-item\">\n                <div className=\"item-solo\">\n                    <div className=\"item-solo-text\">\n                        <img src={movie?.poster} className=\"Poster\" alt=\"\"/>\n                    </div>\n                    <div className=\"item-solo-text\">\n                        <p>Director: {movie?.director}</p>\n                        <p>Duration: {movie?.duration} minutes</p>\n                        <p>Genre: {movie?.genre}</p>\n                    </div>\n                </div>\n                <h2>Description:</h2>\n                <p>{movie?.description}</p>\n                </div>\n                <h1>Showings:</h1>\n                <div className=\"item-solo\">\n                    <div className=\"item-solo-text\">\n                        {showings?.length? (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>State</th>\n                                        <th>Date and Time</th>\n                                        <th>Room</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {showings.map((showing, index) => (\n                                        <tr key={index}>\n                                            <td>{showing?.state}</td>\n                                            <td>{showing?.showingDate}</td>\n                                            <td>Room {showing?.showingRoom}</td>\n                                            <td>\n                                                <button onClick={()=>onMakeReservation(showing.id)}>Make Reservation</button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        ) : <p><br />There are no registered showings</p>\n                        }\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default MoviePage","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/components/Navbar.js",["139","140"],[],"import { useNavigate } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"../context/AuthProvider\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faUserCircle, faDoorOpen} from \"@fortawesome/free-solid-svg-icons\";\nimport useAuth from \"../hooks/useAuth\";\nimport Reservations from \"../pages/Reservations\";\n\nconst Navbar = () => {\n\n    const navigate = useNavigate();\n    const { setAuth } = useContext(AuthContext);\n    const { auth } = useAuth();\n\n    const [isAuthorized,setIsAuthorized] = useState(false);\n\n    useEffect(() => {\n        setIsAuthorized(auth?.roles?.find(role => role === \"EMPLOYEE\" || role === \"EMPLOYER\" || role === \"ADMIN\"));\n    }, [])\n\n    const logout = async () => {\n        // if used in more components, this should be in context \n        // axios to /logout endpoint \n        setAuth({});\n        navigate('/login');\n    }\n\n    const homePage = async () => {\n        navigate('/')\n    }\n\n    const usersPage = async () => {\n        navigate('/users')\n    }\n\n    const moviesPage = async () => {\n        navigate('/movies')\n    }\n\n    const showingsPage = async () => {\n        navigate('/showings')\n    }\n\n    const reservationsPage = async () => {\n        navigate('/reservations')\n    }\n\n    const personalInfo = async () => {\n        navigate('/personal_info')\n    }\n\n    return (\n        <div >\n        <div className=\"navbar\">\n            <button onClick={homePage} className=\"navbarlogo\">\n                <FontAwesomeIcon icon={faHome} />\n                </button>\n            <button disabled={!isAuthorized ? true : false} onClick={moviesPage} className=\"navbarbutton\">Manage Movies</button>\n            <button disabled={!isAuthorized ? true : false} onClick={usersPage} className=\"navbarbutton\">Manage users</button>\n            <button disabled={!isAuthorized ? true : false} onClick={showingsPage} className=\"navbarbutton\">Manage showings</button>\n            <button disabled={!isAuthorized ? true : false} onClick={reservationsPage} className=\"navbarbutton\" >Manage Reservations</button>\n            <button onClick={personalInfo} className=\"navbarbutton\">\n                <FontAwesomeIcon icon={faUserCircle} />   {auth?.username}\n            </button>\n            <button className=\"navbarbutton\" onClick={logout}><FontAwesomeIcon icon={faDoorOpen}/> Logout</button>\n        </div>\n        </div>\n    )\n}\n\nexport default Navbar","/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/api/axios.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/hooks/useAuth.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/hooks/useAxiosPrivate.js",[],[],"/Users/ioannischionas/Code/springboot/cineProject/demo-frontend/src/hooks/useRefreshToken.js",[],[],{"ruleId":"141","severity":1,"message":"142","line":22,"column":8,"nodeType":"143","endLine":22,"endColumn":10,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":65,"column":8,"nodeType":"143","endLine":65,"endColumn":10,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"142","line":22,"column":8,"nodeType":"143","endLine":22,"endColumn":10,"suggestions":"147"},{"ruleId":"141","severity":1,"message":"148","line":85,"column":8,"nodeType":"143","endLine":85,"endColumn":10,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":6,"column":11,"nodeType":"152","messageId":"153","endLine":6,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":22,"column":8,"nodeType":"143","endLine":22,"endColumn":10,"suggestions":"154"},{"ruleId":"141","severity":1,"message":"155","line":85,"column":8,"nodeType":"143","endLine":85,"endColumn":10,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"157","line":41,"column":11,"nodeType":"143","endLine":41,"endColumn":13,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"142","line":22,"column":8,"nodeType":"143","endLine":22,"endColumn":10,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"157","line":85,"column":8,"nodeType":"143","endLine":85,"endColumn":10,"suggestions":"160"},{"ruleId":"141","severity":1,"message":"155","line":43,"column":11,"nodeType":"143","endLine":43,"endColumn":13,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":100,"column":11,"nodeType":"143","endLine":100,"endColumn":13,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"164","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":19,"column":8,"nodeType":"143","endLine":19,"endColumn":10,"suggestions":"165"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth?.roles'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array.",["167"],["168"],"React Hook useEffect has a missing dependency: 'loadShowings'. Either include it or remove the dependency array.",["169"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar",["170"],"React Hook useEffect has a missing dependency: 'loadMovies'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'loadReservations'. Either include it or remove the dependency array.",["172"],["173"],["174"],["175"],"React Hook useEffect has missing dependencies: 'loadMovie' and 'loadShowings'. Either include them or remove the dependency array.",["176"],"'Reservations' is defined but never used.",["177"],{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"178","fix":"182"},{"desc":"183","fix":"184"},{"desc":"178","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"178","fix":"190"},{"desc":"188","fix":"191"},{"desc":"186","fix":"192"},{"desc":"193","fix":"194"},{"desc":"178","fix":"195"},"Update the dependencies array to be: [auth?.roles]",{"range":"196","text":"197"},"Update the dependencies array to be: [loadUsers]",{"range":"198","text":"199"},{"range":"200","text":"197"},"Update the dependencies array to be: [loadShowings]",{"range":"201","text":"202"},{"range":"203","text":"197"},"Update the dependencies array to be: [loadMovies]",{"range":"204","text":"205"},"Update the dependencies array to be: [loadReservations]",{"range":"206","text":"207"},{"range":"208","text":"197"},{"range":"209","text":"207"},{"range":"210","text":"205"},"Update the dependencies array to be: [loadMovie, loadShowings]",{"range":"211","text":"212"},{"range":"213","text":"197"},[672,674],"[auth?.roles]",[1835,1837],"[loadUsers]",[655,657],[2501,2503],"[loadShowings]",[649,651],[2479,2481],"[loadMovies]",[1298,1300],"[loadReservations]",[667,669],[2557,2559],[1237,1239],[3037,3039],"[loadMovie, loadShowings]",[746,748]]